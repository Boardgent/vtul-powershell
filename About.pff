
  <FileID>18684187-d2c0-42d2-9b89-3841a10ea03f</FileID>
  <FileVersion>1.2</FileVersion>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="About" children="Controls">
    <Property name="AcceptButton">
      <Reference name="buttonOK" />
    </Property>
    <Property name="ClientSize">284, 262</Property>
    <Property name="FormBorderStyle">FixedDialog</Property>
    <Property name="MaximizeBox">False</Property>
    <Property name="MinimizeBox">False</Property>
    <Property name="Name">About</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">About vTul</Property>
    <Event name="Load">FormEvent_Load</Event>
    <Object type="System.Windows.Forms.LinkLabel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="linklabelVTulWebsite" children="Controls">
      <Property name="Location">27, 181</Property>
      <Property name="Name">linklabelVTulWebsite</Property>
      <Property name="Size">78, 23</Property>
      <Property name="TabIndex">4</Property>
      <Property name="TabStop">True</Property>
      <Property name="Text">vTul Website</Property>
      <Event name="LinkClicked">linklabelVTulWebsite_LinkClicked</Event>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelVTulIsAFreeToolForRe" children="Controls">
      <Property name="Font">Microsoft Sans Serif, 10pt</Property>
      <Property name="Location">27, 134</Property>
      <Property name="Name">labelVTulIsAFreeToolForRe</Property>
      <Property name="Size">223, 47</Property>
      <Property name="TabIndex">3</Property>
      <Property name="Text">vTul is a free tool for remote non-agent Windows management powered by Intel vPro</Property>
    </Object>
    <Object type="System.Windows.Forms.Panel, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Logo" children="Controls">
      <Property name="BackgroundImage">
        <Binary></Binary>
      </Property>
      <Property name="BackgroundImageLayout">Zoom</Property>
      <Property name="Location">154, 23</Property>
      <Property name="Name">Logo</Property>
      <Property name="Size">96, 88</Property>
      <Property name="TabIndex">1</Property>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="Title" children="Controls">
      <Property name="Font">Segoe UI Symbol, 35pt</Property>
      <Property name="Location">27, 37</Property>
      <Property name="Name">Title</Property>
      <Property name="Size">121, 57</Property>
      <Property name="TabIndex">2</Property>
      <Property name="Text">vTul</Property>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonOK" children="Controls">
      <Property name="Anchor">Bottom, Right</Property>
      <Property name="DialogResult">OK</Property>
      <Property name="Location">197, 227</Property>
      <Property name="Name">buttonOK</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">0</Property>
      <Property name="Text">OK</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
    </Object>
  </Object>
  <Code><![CDATA[

function OnApplicationLoad {
	#Note: This function is not called in Projects
	#Note: This function runs before the form is created
	#Note: To get the script directory in the Packager use: Split-Path $hostinvocation.MyCommand.path
	#Note: To get the console output in the Packager (Windows Mode) use: $ConsoleOutput (Type: System.Collections.ArrayList)
	#Important: Form controls cannot be accessed in this function
	#TODO: Add snapins and custom code to validate the application load
	
	return $true #return true for success or false for failure
}


function OnApplicationExit {
	#Note: This function is not called in Projects
	#Note: This function runs after the form is closed
	#TODO: Add custom code to clean up and unload snapins when the application exits
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}

$FormEvent_Load={
	#TODO: Initialize Form Controls here
	
}

#region Control Helper Functions
function Load-Chart
{
<#
	.SYNOPSIS
		This functions helps you plot points on a chart

	.DESCRIPTION
		Use the function to plot points on a chart or add more charts to a chart control

	.PARAMETER  ChartControl
		The Chart Control to use to display the data.

	.PARAMETER  XPoints
		Set the X Axis Points. These can be strings or numerical values.

	.PARAMETER  YPoints
		Set the Y Axis Points. These can be strings or numerical values.
	
	.PARAMETER  XTitle
		Set the Title for the X Axis.

	.PARAMETER  YTitle
		Set the Title for the Y Axis.
	
	.PARAMETER  Title
		Set the Title for the chart.
	
	.PARAMETER  ChartType
		Set the Style of the chart. See System.Windows.Forms.DataVisualization.Charting.SeriesChartType Enum

	.PARAMETER SeriesIndex
		Set the settings of a particular Series and corresponding ChartArea

	.PARAMETER TitleIndex
		Set the settings of a particular Title
	
	.PARAMETER SeriesName
		Set the settings of a particular Series using its name and corresponding ChartArea. 
		The Series will be created if not found.
		If SeriesIndex is set, it will replace the Series' name if the Series does not exist
	
	.PARAMETER Enable3D
		The chart will be rendered in 3D.
	
	.PARAMETER Disable3D
		The chart will be rendered in 2D.	
	
	.PARAMETER Append
		When this switch is used, a new ChartArea is added to Chart Control.

	.LINK
		http://www.sapien.com/blog/2011/05/05/primalforms-2011-designing-charts-for-powershell/
	
#>
	Param( #$XPoints, $YPoints, $XTitle, $YTitle, $Title, $ChartStyle)
	 	[ValidateNotNull()]
		[Parameter(Position=1,Mandatory=$true)]
  		[System.Windows.Forms.DataVisualization.Charting.Chart]$ChartControl
		,
		[ValidateNotNull()]
		[Parameter(Position=2,Mandatory=$true)]
  		$XPoints
		,
		[Parameter(Position=3,Mandatory=$true)]
  		$YPoints
		,
		[Parameter(Position=4,Mandatory=$false)]
  		[string]$XTitle
		,
		[Parameter(Position=5,Mandatory=$false)]
  		[string]$YTitle
		,
		[Parameter(Position=6,Mandatory=$false)]
  		[string]$Title
		,
		[Parameter(Position=7,Mandatory=$false)]
  		[System.Windows.Forms.DataVisualization.Charting.SeriesChartType]$ChartType
		,
		[Parameter(Position=8,Mandatory=$false)]
  		$SeriesIndex = -1
		,
		[Parameter(Position=9,Mandatory=$false)]
  		$TitleIndex = 0,
		[Parameter(Mandatory=$false)]
  		[string]$SeriesName = $null,
		[switch]$Enable3D,
		[switch]$Disable3D,
		[switch]$Append)

	$ChartAreaIndex = 0
	if($Append)
	{
		$name = "ChartArea " + ($ChartControl.ChartAreas.Count + 1).ToString();
		$ChartArea = $ChartControl.ChartAreas.Add($name)
		$ChartAreaIndex = $ChartControl.ChartAreas.Count - 1
		
		$name = "Series " + ($ChartControl.Series.Count + 1).ToString();
		$Series = $ChartControl.Series.Add($name) 
		$SeriesIndex = $ChartControl.Series.Count - 1

		$Series.ChartArea = $ChartArea.Name
		
		if($Title)
		{
			$name = "Title " + ($ChartControl.Titles.Count + 1).ToString();
			$TitleObj = $ChartControl.Titles.Add($Title)
			$TitleIndex = $ChartControl.Titles.Count - 1	
			$TitleObj.DockedToChartArea = $ChartArea.Name
			$TitleObj.IsDockedInsideChartArea = $false
		}
	}
	else
	{
		if($ChartControl.ChartAreas.Count -eq  0)
		{
			$name = "ChartArea " + ($ChartControl.ChartAreas.Count + 1).ToString();
			[void]$ChartControl.ChartAreas.Add($name)
			$ChartAreaIndex = $ChartControl.ChartAreas.Count - 1
		}	
		
		if($ChartControl.Series.Count -eq 0)
		{
			if(-not $SeriesName)
			{
				$SeriesName = "Series " + ($ChartControl.Series.Count + 1).ToString();
			}
			
			$Series = $ChartControl.Series.Add($SeriesName) 
			$SeriesIndex = $ChartControl.Series.Count - 1
			$Series.ChartArea = $ChartControl.ChartAreas[$ChartAreaIndex].Name
		}
		elseif($SeriesName)
		{
			$Series = $ChartControl.Series.FindByName($SeriesName)
				
			if($Series -eq $null)
			{
				if(($SeriesIndex -gt -1) -and ($SeriesIndex -lt $ChartControl.Series.Count))
				{
					$Series = $ChartControl.Series[$SeriesIndex]
					$Series.Name = $SeriesName
				}
				else
				{
					$Series = $ChartControl.Series.Add($SeriesName)
					$SeriesIndex = $ChartControl.Series.Count - 1
				}
				
				$Series.ChartArea = $ChartControl.ChartAreas[$ChartAreaIndex].Name
			}
			else
			{
				$SeriesIndex = $ChartControl.Series.IndexOf($Series)
				$ChartAreaIndex = $ChartControl.ChartAreas.IndexOf($Series.ChartArea)
			}		
		}
	}
	
	if(($SeriesIndex -lt 0) -or ($SeriesIndex -ge $ChartControl.Series.Count))
	{
		$SeriesIndex = 0
	}
	
	$Series = $ChartControl.Series[$SeriesIndex]
	$Series.Points.Clear()
	$ChartArea = $ChartControl.ChartAreas[$Series.ChartArea]
	
	if($Enable3D)
	{
		$ChartArea.Area3DStyle.Enable3D = $true
	}
	elseif($Disable3D)
	{
		$ChartArea.Area3DStyle.Enable3D = $false
	}
	
	if($Title)
	{
		if($ChartControl.Titles.Count -eq 0)
		{
			#$name = "Title " + ($ChartControl.Titles.Count + 1).ToString();
			$TitleObj = $ChartControl.Titles.Add($Title)
			$TitleIndex = $ChartControl.Titles.Count - 1
			$TitleObj.DockedToChartArea = $ChartArea.Name
			$TitleObj.IsDockedInsideChartArea = $false
		}
		
		$ChartControl.Titles[$TitleIndex].Text = $Title
	}
	
	if($ChartType)
	{
		$Series.ChartType = $ChartType
	}
	
	if($XTitle)
	{
		$ChartArea.AxisX.Title = $XTitle
	}
	
	if($YTitle)
	{
		$ChartArea.AxisY.Title = $YTitle
	}
	
	if($XPoints -isnot [Array] -or $XPoints -isnot [System.Collections.IEnumerable])
	{
		$array = New-Object System.Collections.ArrayList
		$array.Add($XPoints)
		$XPoints = $array
	}
	
	if($YPoints -isnot [Array] -or $YPoints -isnot [System.Collections.IEnumerable])
	{
		$array = New-Object System.Collections.ArrayList
		$array.Add($YPoints)
		$YPoints = $array
	}
	
	$Series.Points.DataBindXY($XPoints, $YPoints)

}


function Clear-Chart
{
<#
	.SYNOPSIS
		This function clears the contents of the chart

	.DESCRIPTION
		Use the function to remove contents from the chart control

	.PARAMETER  ChartControl
		The Chart Control to clear

	.PARAMETER  LeaveSingleChart
		Leaves the first chart and removes all others from the control
	
	.LINK
		http://www.sapien.com/blog/2011/05/05/primalforms-2011-designing-charts-for-powershell/
#>
	Param (	
	[ValidateNotNull()]
	[Parameter(Position=1,Mandatory=$true)]
  	[System.Windows.Forms.DataVisualization.Charting.Chart]$ChartControl
	,
	[Parameter(Position=2, Mandatory=$false)]
	[Switch]$LeaveSingleChart
	)
	
	$count = 0	
	if($LeaveSingleChart)
	{
		$count = 1
	}
	
	while($ChartControl.Series.Count -gt $count)
	{
		$ChartControl.Series.RemoveAt($ChartControl.Series.Count - 1)
	}
	
	while($ChartControl.ChartAreas.Count -gt $count)
	{
		$ChartControl.ChartAreas.RemoveAt($ChartControl.ChartAreas.Count - 1)
	}
	
	while($ChartControl.Titles.Count -gt $count)
	{
		$ChartControl.Titles.RemoveAt($ChartControl.Titles.Count - 1)
	}
	
	if($ChartControl.Series.Count -gt 0)
	{
		$ChartControl.Series[0].Points.Clear()
	}
}
#endregion

$linklabelVTulWebsite_LinkClicked=[System.Windows.Forms.LinkLabelLinkClickedEventHandler]{
	Start-Process "http://www.tulpep.com/Solutions/vTul"
}
]]></Code>
  <Mode>0</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089|C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Windows.Forms.dll</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a|C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Drawing.dll</Assembly>
    <Assembly>System.Management.Automation, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089|C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.dll</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089|C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Data.dll</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089|C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.XML.dll</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a|C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.DirectoryServices.dll</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089|C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.Core.dll</Assembly>
    <Assembly>System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a|C:\Windows\Microsoft.NET\Framework\v4.0.30319\System.ServiceProcess.dll</Assembly>
  </Assemblies>
  <Packager>
    <General>
      <PackageName>
      </PackageName>
      <PackageIcon>
      </PackageIcon>
      <ManifestCreation>1</ManifestCreation>
      <CustomManifest>
      </CustomManifest>
      <Platform>-1</Platform>
      <RunSTA>0</RunSTA>
    </General>
    <Security>
      <Username>
      </Username>
      <Password>
      </Password>
      <SignPackage>False</SignPackage>
      <Certificate>
      </Certificate>
      <CertificatePassword>
      </CertificatePassword>
      <RunAs>0</RunAs>
    </Security>
    <Version>
      <FileVersion>1.0.0.0</FileVersion>
      <ProductVersion>1.0.0.0</ProductVersion>
      <ProductName>
      </ProductName>
      <Description>
      </Description>
      <Company>Tulpep</Company>
      <Copyright>
      </Copyright>
      <InternalName>
      </InternalName>
      <OriginalFileName>
      </OriginalFileName>
      <Comment>
      </Comment>
    </Version>
  </Packager>
